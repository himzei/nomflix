{"version":3,"sources":["assets/noPosterSmall.png","api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","language","movieApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","Loader","map","movie","original_title","poster_path","vote_average","release_date","HomeContainer","React","Component","state","componentDidMount","data","results","setState","render","this","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","location","pathname","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","constructor","super","includes","match","push","history","parsedId","parseInt","isNaN","console","log","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","document","getElementById"],"mappings":"mGAAA,OAAe,cAA0B,2C,4HCEzC,MAAMA,E,OAAMC,EAAMC,OAAO,CACvBC,QAAS,gCACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIDC,EACC,IAAMP,EAAIQ,IAAI,qBADfD,EAED,IAAMP,EAAIQ,IAAI,kBAFbD,EAGF,IAAMP,EAAIQ,IAAI,iBAHZD,EAIGE,GACZT,EAAIQ,IAAJ,gBAAiBC,GAAM,CACrBL,OAAQ,CACNM,mBAAoB,YAPfH,EAUFI,GACPX,EAAIQ,IAAI,eAAgB,CACtBJ,OAAQ,CACNQ,MAAOC,mBAAmBF,MAKrBG,EACD,IAAMd,EAAIQ,IAAI,gBADbM,EAEF,IAAMd,EAAIQ,IAAI,cAFZM,EAGE,IAAMd,EAAIQ,IAAI,mBAHhBM,EAIEL,GACXT,EAAIQ,IAAJ,aAAcC,GAAM,CAClBL,OAAQ,CACNM,mBAAoB,YAPfI,EAUFH,GACPX,EAAIQ,IAAI,YAAa,CACnBJ,OAAQ,CACNQ,MAAOC,mBAAmBF,M,uCCrClC,MAAMI,EAAYC,IAAOC,IAAV,mFAMTC,EAAQF,IAAOG,KAAV,qEAKLC,EAAOJ,IAAOC,IAAV,2IAsBKI,I,EAAAA,EAfC,EAAGC,QAAOC,cACxB,eAACR,EAAD,WACE,cAACG,EAAD,UAAQI,IACR,cAACF,EAAD,UAAOG,OCrBX,MAAMR,EAAYC,IAAOC,IAAV,sJASA,I,IAAA,MACb,cAAC,EAAD,UACE,sBAAMO,KAAK,MAAMC,aAAW,UAA5B,sBCXJ,MAAMV,EAAYC,IAAOC,IAAV,6GAOTS,EAAOV,IAAOG,KAAV,gEACCQ,GAASA,EAAMC,QAeXC,I,YAAAA,EAXC,EAAGC,OAAMF,WACvB,cAAC,EAAD,UACE,cAACF,EAAD,CAAME,MAAOA,EAAb,SAAqBE,MCbzB,MAAMf,EAAYC,IAAOC,IAAV,gDAITc,EAAQf,IAAOC,IAAV,0MACeU,GAASA,EAAMK,QAQnCC,EAASjB,IAAOG,KAAV,gJAQNe,EAAiBlB,IAAOC,IAAV,wKAIdc,EAGAE,GAMAf,EAAQF,IAAOG,KAAV,sEAKLgB,GAAOnB,IAAOG,KAAV,oFAgCKiB,I,GAAAA,GA3BA,EAAG3B,KAAI4B,WAAUf,QAAOgB,SAAQC,OAAMC,WAAU,KAC7D,cAAC,IAAD,CAAMC,GAAID,EAAO,iBAAa/B,GAAb,gBAA6BA,GAA9C,SACE,eAAC,EAAD,WACE,eAACyB,EAAD,WACE,cAACH,EAAD,CAAOC,MAAOK,EAAQ,0CAAsCA,GAAaK,EAAQ,MACjF,eAACT,EAAD,WACE,sBAAMT,KAAK,MAAMC,aAAW,SAA5B,0BAEQ,IACPa,EAJH,YAOF,cAAC,EAAD,UAAQhB,EAAMqB,OAAS,GAAf,UAAuBrB,EAAMsB,UAAU,EAAG,IAA1C,OAAqDtB,IAC7D,cAACa,GAAD,UAAOI,SCrDb,MAAMxB,GAAYC,IAAOC,IAAV,gDA2EA4B,I,GAAAA,GAvEO,EAAGC,aAAYC,UAASC,WAAUC,UAASC,WAC/D,qCACE,cAACC,EAAA,EAAD,UACE,uDAEDF,EACC,cAACG,EAAD,IAEA,eAAC,GAAD,WACE,cAACD,EAAA,EAAD,UACE,uDAEDL,GAAcA,EAAWH,OAAS,GACjC,cAAC,EAAD,CAASrB,MAAM,cAAf,SACGwB,EAAWO,KAAKC,GACf,cAAC,GAAD,CAEE7C,GAAI6C,EAAM7C,GACVa,MAAOgC,EAAMC,eACblB,SAAUiB,EAAME,YAChBhB,SAAS,EACTF,OAAQgB,EAAMG,aACdlB,KAAMe,EAAMI,cAAgBJ,EAAMI,aAAad,UAAU,EAAG,IANvDU,EAAM7C,QAWlBsC,GAAWA,EAAQJ,OAAS,GAC3B,cAAC,EAAD,CAASrB,MAAM,gBAAf,SACGyB,EAAQM,KAAKC,GACZ,cAAC,GAAD,CAEE7C,GAAI6C,EAAM7C,GACVa,MAAOgC,EAAMC,eACblB,SAAUiB,EAAME,YAChBhB,SAAS,EACTF,OAAQgB,EAAMG,aACdlB,KAAMe,EAAMI,cAAgBJ,EAAMI,aAAad,UAAU,EAAG,IANvDU,EAAM7C,QAWlBuC,GAAYA,EAASL,OAAS,GAC7B,cAAC,EAAD,CAASrB,MAAM,iBAAf,SACG0B,EAASK,KAAKC,GACb,cAAC,GAAD,CAEE7C,GAAI6C,EAAM7C,GACVa,MAAOgC,EAAMC,eACblB,SAAUiB,EAAME,YAChBhB,SAAS,EACTF,OAAQgB,EAAMG,aACdlB,KAAMe,EAAMI,cAAgBJ,EAAMI,aAAad,UAAU,EAAG,IANvDU,EAAM7C,QAWlByC,GAAS,cAAC,EAAD,CAAStB,MAAM,UAAUE,KAAMoB,UCpElCS,GCGA,cAAcC,IAAMC,UAAW,eAAD,oBAC3CC,MAAQ,CACNhB,WAAY,KACZE,SAAU,KACVD,QAAS,KACTG,MAAO,KACPD,SAAS,GAGLc,oBAAqB,IAAD,2JAIZxD,IAJY,uBAGHuC,EAHG,EAGpBkB,KAAQC,QAHY,SAOZ1D,IAPY,uBAMHyC,EANG,EAMpBgB,KAAQC,QANY,UAUZ1D,IAVY,iBASHwC,EATG,EASpBiB,KAAQC,QAGV,EAAKC,SAAS,CACZpB,aACAE,WACAD,YAfoB,kDAkBtB,EAAKmB,SAAS,CACZhB,MAAO,iCAnBa,yBAsBtB,EAAKgB,SAAS,CACZjB,SAAS,IAvBW,+EA4B1BkB,SAAU,MAAD,EACmDC,KAAKN,MAAvDhB,EADD,EACCA,WAAYE,EADb,EACaA,SAAUD,EADvB,EACuBA,QAASG,EADhC,EACgCA,MAAOD,EADvC,EACuCA,QAC9C,OACE,cAAC,GAAD,CACEH,WAAYA,EACZE,SAAUA,EACVD,QAASA,EACTG,MAAOA,EACPD,QAASA,MCzCjB,MAAMlC,GAAYC,IAAOC,IAAV,gDAsEAoD,I,SAAAA,GAlEK,EAAGC,WAAUvB,UAASwB,cAAatB,UAASC,WAC9D,qCACA,cAACC,EAAA,EAAD,UACE,mDAEDF,EACC,cAACG,EAAD,IAEA,eAAC,GAAD,WACGkB,GAAYA,EAAS3B,OAAS,GAC7B,cAAC,EAAD,CAASrB,MAAM,kBAAf,SACGgD,EAASjB,KAAKmB,GACb,cAAC,GAAD,CAEE/D,GAAI+D,EAAK/D,GACTa,MAAOkD,EAAKC,cACZpC,SAAUmC,EAAKhB,YACflB,OAAQkC,EAAKf,aACblB,KAAMiC,EAAKE,gBAAkBF,EAAKE,eAAe9B,UAAU,EAAG,IALzD4B,EAAK/D,QAUjBsC,GAAWA,EAAQJ,OAAS,GAC3B,cAAC,EAAD,CAASrB,MAAM,gBAAf,SACGyB,EAAQM,KAAKmB,GACZ,cAAC,GAAD,CAEE/D,GAAI+D,EAAK/D,GACTa,MAAOkD,EAAKC,cACZpC,SAAUmC,EAAKhB,YACflB,OAAQkC,EAAKf,aACblB,KAAMiC,EAAKE,gBAAkBF,EAAKE,eAAe9B,UAAU,EAAG,IALzD4B,EAAK/D,QAUjB8D,GAAeA,EAAY5B,OAAS,GACnC,cAAC,EAAD,CAASrB,MAAM,eAAf,SACGiD,EAAYlB,KAAKmB,GAChB,cAAC,GAAD,CAEE/D,GAAI+D,EAAK/D,GACTa,MAAOkD,EAAKC,cACZpC,SAAUmC,EAAKhB,YACflB,OAAQkC,EAAKf,aACblB,KAAMiC,EAAKE,gBAAkBF,EAAKE,eAAe9B,UAAU,EAAG,IALzD4B,EAAK/D,QAUjByC,GAAS,cAAC,EAAD,CAAStB,MAAM,UAAUE,KAAMoB,UC9DhCyB,GCGA,cAAcf,IAAMC,UAAW,eAAD,oBAC3CC,MAAQ,CACNQ,SAAU,KACVvB,QAAS,KACTwB,YAAa,KACbtB,SAAS,EACTC,MAAO,MAGHa,oBAAqB,IAAD,2JAIZjD,IAJY,uBAGHwD,EAHG,EAGpBN,KAAQC,QAHY,SAOZnD,IAPY,uBAMHiC,EANG,EAMpBiB,KAAQC,QANY,UAUZnD,IAVY,iBASHyD,EATG,EASpBP,KAAQC,QAEV,EAAKC,SAAS,CAAEI,WAAUvB,UAASwB,gBAXb,kDAatB,EAAKL,SAAS,CACZhB,MAAO,6BAda,yBAiBtB,EAAKgB,SAAS,CACZjB,SAAS,IAlBW,+EAuB1BkB,SAAU,MAAD,EACoDC,KAAKN,MAAxDQ,EADD,EACCA,SAAUvB,EADX,EACWA,QAASwB,EADpB,EACoBA,YAAatB,EADjC,EACiCA,QAASC,EAD1C,EAC0CA,MAEjD,OACE,cAAC,GAAD,CACEoB,SAAUA,EACVvB,QAASA,EACTwB,YAAaA,EACbtB,QAASA,EACTC,MAAOA,MCrCf,MAAMnC,GAAYC,IAAOC,IAAV,gDAIT2D,GAAO5D,IAAO6D,KAAV,sEAKJC,GAAQ9D,IAAO+D,MAAV,iFAoFIC,I,YAAAA,GA9ES,EACtBC,eACAC,YACAjC,UACAC,QACAiC,aACAC,eACAC,gBAIA,eAAC,GAAD,WACE,cAAClC,EAAA,EAAD,UAAQ,uDACR,cAACyB,GAAD,CAAMU,SAAUF,EAAhB,SACE,cAACN,GAAD,CACES,YAAY,4BACZC,MAAOL,EACPM,SAAUJ,MAGbpC,EACC,cAACG,EAAD,IAEA,qCACG6B,GAAgBA,EAAatC,OAAS,GACrC,cAAC,EAAD,CAASrB,MAAM,eAAf,SACG2D,EAAa5B,KAAKC,GACjB,cAAC,GAAD,CAEE7C,GAAI6C,EAAM7C,GACVa,MAAOgC,EAAMC,eACblB,SAAUiB,EAAME,YAChBhB,SAAS,EACTF,OAAQgB,EAAMG,aACdlB,KAAMe,EAAMI,cAAgBJ,EAAMI,aAAad,UAAU,EAAG,IANvDU,EAAM7C,QAWlByE,GAAaA,EAAUvC,OAAS,GAC/B,cAAC,EAAD,CAASrB,MAAM,iBAAf,SACG4D,EAAU7B,KAAKmB,GACd,cAAC,GAAD,CAEE/D,GAAI+D,EAAK/D,GACTa,MAAOkD,EAAKC,cACZpC,SAAUmC,EAAKhB,YACflB,OAAQkC,EAAKf,aACblB,KACEiC,EAAKE,gBAAkBF,EAAKE,eAAe9B,UAAU,EAAG,IANrD4B,EAAK/D,QAYjByC,GAAS,cAAC,EAAD,CAAStB,MAAM,UAAUE,KAAMoB,IACxCgC,GACCD,GACAC,EAAUvC,OAAS,GACK,IAAxBsC,EAAatC,QACX,cAAC,EAAD,CAASb,KAAK,gBAAgBF,MAAM,kBClFjC8D,GCGA,cAAc9B,IAAMC,UAAW,eAAD,iCAC3CC,MAAQ,CACNmB,aAAc,KACdC,UAAW,KACXC,WAAY,GACZlC,SAAS,EACTC,MAAO,MANkC,KAS3CkC,aAAgBO,IACdA,EAAMC,iBADkB,MAEhBT,EAAef,KAAKN,MAApBqB,WACW,KAAfA,GACFf,KAAKyB,aAAaV,IAbqB,KAiB3CE,WAAcM,IAAW,MAEXH,EACRG,EADFG,OAAUN,MAGZpB,KAAKF,SAAS,CACZiB,WAAYK,KAvB2B,KA2B3CK,aA3B2C,uCA2B5B,WAAOlF,GAAP,uBAAAoF,EAAA,6DACLZ,EAAe,EAAKrB,MAApBqB,WACR,EAAKjB,SAAS,CAAEjB,SAAS,IAFZ,kBAMD1C,EAAgB4E,GANf,uBAKQF,EALR,EAKTjB,KAAQC,QALC,SASDnD,EAAaqE,GATZ,gBAQQD,EARR,EAQTlB,KAAQC,QAEV,EAAKC,SAAS,CACZe,eACAC,cAEF,EAAKhB,SAAS,CAAEjB,SAAS,IAdd,kDAgBX,EAAKiB,SAAS,CAAEhB,MAAO,uBAhBZ,yBAkBX,EAAKgB,SAAS,CAAEjB,SAAS,IAlBd,6EA3B4B,sDAiD3CkB,SAAU,MAAD,EACyDC,KAAKN,MAA7DmB,EADD,EACCA,aAAcC,EADf,EACeA,UAAWC,EAD1B,EAC0BA,WAAYlC,EADtC,EACsCA,QAASC,EAD/C,EAC+CA,MAEtD,OACE,cAAC,GAAD,CACE+B,aAAcA,EACdC,UAAWA,EACXC,WAAYA,EACZlC,QAASA,EACTC,MAAOA,EACPkC,aAAchB,KAAKgB,aACnBC,WAAYjB,KAAKiB,eC7DzB,MAAMW,GAAShF,IAAOiF,OAAV,oRAcNC,GAAOlF,IAAOmF,GAAV,gDAIJC,GAAOpF,IAAOqF,GAAV,2KAKJ1E,GAAUA,EAAM2E,QAAU,UAAY,gBAItCC,GAAQvF,YAAOwF,IAAPxF,CAAH,qHAOIyF,I,8BAAAA,gBAAW,EAAGC,UAAYC,eACvC,cAACX,GAAD,UACE,eAACE,GAAD,WACE,cAACE,GAAD,CAAME,QAAsB,MAAbK,EAAf,SACE,cAACJ,GAAD,CAAO9D,GAAG,IAAV,sBAEF,cAAC2D,GAAD,CAAME,QAAsB,QAAbK,EAAf,SACE,cAACJ,GAAD,CAAO9D,GAAG,MAAV,kBAEF,cAAC2D,GAAD,CAAME,QAAsB,YAAbK,EAAf,SACE,cAACJ,GAAD,CAAO9D,GAAG,UAAV,6BC1CR,MAAM1B,GAAYC,IAAOC,IAAV,sHAOT2F,GAAW5F,IAAOC,IAAV,oQAMaU,GAAUA,EAAMkF,UAQrCC,GAAU9F,IAAOC,IAAV,uHAQP8F,GAAQ/F,IAAOC,IAAV,sLAGgBU,GAAUA,EAAMkF,UAMrCG,GAAOhG,IAAOC,IAAV,mEAKJC,GAAQF,IAAOiG,GAAV,0EAKLC,GAAgBlG,IAAOC,IAAV,iDAIbmF,GAAOpF,IAAOG,KAAV,4BAEJgG,GAAUnG,IAAOG,KAAV,iDAIPiG,GAAWpG,IAAOqG,EAAV,2GAwECC,I,GAAAA,GAjES,EAAGC,SAAQtE,UAASC,WAC1CD,EACE,qCACA,cAACE,EAAA,EAAD,UACE,wDAEF,cAACC,EAAD,OAGA,eAAC,GAAD,WACE,cAACD,EAAA,EAAD,UACE,kCAAQoE,EAAOhE,eACPgE,EAAOhE,eACPgE,EAAO9C,cAFf,kBAIF,cAACmC,GAAD,CACEC,QAAO,8CAAyCU,EAAOC,iBAEzD,eAACV,GAAD,WACE,cAACC,GAAD,CACEF,QACEU,EAAO/D,YAAP,6CAC0C+D,EAAO/D,aAC7Cd,EAAQ,MAGhB,eAACsE,GAAD,WACE,eAAC,GAAD,WACGO,EAAOhE,eACJgE,EAAOhE,eACPgE,EAAO9C,cAAe,OAE5B,eAACyC,GAAD,WACE,cAAC,GAAD,UACGK,EAAO7D,aACJ6D,EAAO7D,aACP6D,EAAO7C,iBAEb,cAACyC,GAAD,qBACA,eAAC,GAAD,WACGI,EAAOE,QAAUF,EAAOE,QAAUF,EAAOG,iBAAiB,GAAI,IADjE,aAIA,cAACP,GAAD,qBACA,cAAC,GAAD,UACGI,EAAOI,QACNJ,EAAOI,OAAOtE,KAAI,CAACuE,EAAOC,IACxBA,IAAUN,EAAOI,OAAOhF,OAAQ,EAAIiF,EAAME,KAA1C,UAAoDF,EAAME,KAA1D,cAIR,cAACV,GAAD,UACGG,EAAOQ,oBCzHLC,GCGA,cAAcpE,IAAMC,UACjCoE,YAAYtG,GACVuG,MAAMvG,GADW,MAGHgF,EACVhF,EADF+E,SAAYC,SAEdvC,KAAKN,MAAQ,CACXyD,OAAQ,KACRrE,MAAO,KACPD,SAAS,EACTT,QAASmE,EAASwB,SAAS,YAIzBpE,oBAAqB,IAAD,2IAMpB,EAAKpC,MAHKlB,EAHU,EAEtB2H,MACEhI,OAAUK,GAED4H,EALW,EAKtBC,QAAWD,KAEL7F,EAAY,EAAKsB,MAAjBtB,QACF+F,EAAWC,SAAS/H,IACtBgI,MAAMF,GATc,yCAUfF,EAAK,MAVU,oBAcnB7F,EAdmB,iCAeIjC,EAAqBgI,GAfzB,gBAeZhB,EAfY,EAelBvD,KAfkB,yCAkBIlD,EAAiByH,GAlBrB,iBAkBZhB,EAlBY,EAkBlBvD,KAlBkB,QAqBtB0E,QAAQC,IAAIpB,GArBU,kDAuBtB,EAAKrD,SAAS,CAAEhB,MAAO,wBAvBD,yBAyBtB,EAAKgB,SAAS,CAAEjB,SAAS,EAAOsE,WAzBV,+EA6B1BpD,SAAU,MAAD,EAC4BC,KAAKN,MAAhCyD,EADD,EACCA,OAAQtE,EADT,EACSA,QAASC,EADlB,EACkBA,MAEzB,OADAwF,QAAQC,IAAIvE,KAAKN,OACV,cAAC,GAAD,CAAiByD,OAAQA,EAAQtE,QAASA,EAASC,MAAOA,MCpCtD,OACb,cAAC,IAAD,UACE,qCACA,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0F,KAAK,IAAIC,OAAK,EAACC,UAAWC,KACjC,cAAC,IAAD,CAAOH,KAAK,MAAMC,OAAK,EAACC,UAAWE,KACnC,cAAC,IAAD,CAAOJ,KAAK,UAAUE,UAAWG,KACjC,cAAC,IAAD,CAAOL,KAAK,aAAaE,UAAWI,KACpC,cAAC,IAAD,CAAON,KAAK,YAAYE,UAAWI,KACnC,cAAC,IAAD,CAAUC,KAAK,IAAI1G,GAAG,c,SCHb2G,OAnBMC,YAAH,gcACZC,MCAN,MAAMC,WAAY1F,YAChBM,SACE,OACE,qCACE,cAACqF,GAAD,IACA,cAACC,GAAD,QAKOF,UCVfG,IAASvF,OAAO,cAAC,GAAD,IAASwF,SAASC,eAAe,W","file":"static/js/main.51221ae3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"1da6b05093c5756cb7ce69216f16526c\",\r\n    language: \"en-US\",\r\n  },\r\n});\r\n\r\nexport const movieApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child){\r\n      margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid; \r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n};\r\n\r\nexport default Section;\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport default () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      ⏳\r\n    </span>\r\n  </Container>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${props => props.color};\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${props => props.bgUrl });\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n    bottom: 10px;\r\n    right: 5px;\r\n    position: absolute;\r\n    opacity: 0;\r\n    transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating}{\r\n        opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300/${imageUrl}` : require(\"../assets/noPosterSmall.png\")} />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            💛\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>{title.length > 15 ? `${title.substring(0, 15)}...` : title}</Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movies | Nomflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        <Helmet>\r\n          <title>Movies | Nomflix</title>\r\n        </Helmet>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                isMovie={true}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 7)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular movie\">\r\n            {popular.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                isMovie={true}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 7)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upcoming && upcoming.length > 0 && (\r\n          <Section title=\"Upcoming Movie\">\r\n            {upcoming.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                isMovie={true}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 7)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c38\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;","import { movieApi } from \"api\";\r\nimport React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await movieApi.nowPlaying();\r\n      const {\r\n        data: { results: upcoming },\r\n      } = await movieApi.upcoming();\r\n      const {\r\n        data: { results: popular },\r\n      } = await movieApi.popular();\r\n\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        popular,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find Movie information\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\"\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) =>(\r\n  <>\r\n  <Helmet>\r\n    <title>TV | Nomflix</title>\r\n  </Helmet>\r\n  {loading ? (\r\n    <Loader />\r\n  ) : (\r\n    <Container>\r\n      {topRated && topRated.length > 0 && (\r\n        <Section title=\"Top rated Shows\">\r\n          {topRated.map((show) => (\r\n            <Poster\r\n              key={show.id}\r\n              id={show.id}\r\n              title={show.original_name}\r\n              imageUrl={show.poster_path}\r\n              rating={show.vote_average}\r\n              year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {popular && popular.length > 0 && (\r\n        <Section title=\"Popular Shows\">\r\n          {popular.map((show) => (\r\n            <Poster\r\n              key={show.id}\r\n              id={show.id}\r\n              title={show.original_name}\r\n              imageUrl={show.poster_path}\r\n              rating={show.vote_average}\r\n              year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {airingToday && airingToday.length > 0 && (\r\n        <Section title=\"Airing Today\">\r\n          {airingToday.map((show) => (\r\n            <Poster\r\n              key={show.id}\r\n              id={show.id}\r\n              title={show.original_name}\r\n              imageUrl={show.poster_path}\r\n              rating={show.vote_average}\r\n              year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {error && <Message color=\"#e74c38\" text={error} />}\r\n    </Container>\r\n  )}\r\n  </>\r\n)\r\n  \r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;","/* eslint-disable import/no-anonymous-default-export */\r\nimport { tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    loading: true,\r\n    error: null\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n      this.setState({ topRated, popular, airingToday });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Cant find TV information\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, loading, error } = this.state;\r\n    \r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  loading,\r\n  error,\r\n  searchTerm,\r\n  handleSubmit,\r\n  updateTerm,\r\n}) => (\r\n\r\n\r\n  <Container>\r\n    <Helmet><title>Search | Nomflix</title></Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movie or TV Show..\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      />\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Result\">\r\n            {movieResults.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                isMovie={true}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV Show Result\">\r\n            {tvResults.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c38\" text={error} />}\r\n        {tvResults &&\r\n          movieResults &&\r\n          tvResults.length < 1 &&\r\n          movieResults.length === 0 && (\r\n            <Message text=\"Nothing found\" color=\"#95a5a6\" />\r\n          )}\r\n      </>\r\n    )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  searchTerm: PropTypes.string,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\"; \r\n\r\nexport default SearchContainer;","/* eslint-disable import/no-anonymous-default-export */\r\nimport { movieApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    loading: false,\r\n    error: null,\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm(searchTerm);\r\n    }\r\n  };\r\n\r\n  updateTerm = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    \r\n    this.setState({\r\n      searchTerm: value,\r\n    });\r\n  };\r\n\r\n  searchByTerm = async (term) => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await movieApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults },\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({\r\n        movieResults,\r\n        tvResults,\r\n      });\r\n      this.setState({ loading: true });\r\n    } catch {\r\n      this.setState({ error: \"Can't find results\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\r\n\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        searchTerm={searchTerm}\r\n        loading={loading}\r\n        error={error}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 3px solid\r\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\"\r\nimport Loader from \"Components/Loader\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px; \r\n  opacity: 0.7; \r\n  line-height: 1.5; \r\n  width : 50%;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <>\r\n    <Helmet>\r\n      <title>Loading | Nomflix</title>\r\n    </Helmet>\r\n    <Loader />\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>{result.original_title\r\n              ? result.original_title\r\n              : result.original_name} | Nomflix</title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original/${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../assets/noPosterSmall.png\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}{\" \"}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date\r\n                : result.first_air_date}\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              {result.runtime ? result.runtime : result.episode_run_time[0]}{\" \"}\r\n              minutes\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length -1 ? genre.name : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n          </ItemContainer>\r\n          <Overview>\r\n            {result.overview}\r\n          </Overview>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;","/* eslint-disable import/no-anonymous-default-export */\r\nimport { movieApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\"),\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n    let result;\r\n    try {\r\n      if(isMovie){\r\n        ({data: result} = await movieApi.movieDetail(parsedId)) \r\n        \r\n      }else{\r\n        ({data: result} = await tvApi.showDetail(parsedId)) \r\n        \r\n      }\r\n      console.log(result)\r\n    } catch {\r\n      this.setState({ error: \"Can't find anything\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, loading, error } = this.state;\r\n    console.log(this.state)\r\n    return <DetailPresenter result={result} loading={loading} error={error} />;\r\n  }\r\n}\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Header from \"Components/Header\";\r\nimport Detail from \"Routes/Detail\";\r\n\r\n\r\nexport default () => (\r\n  <Router>\r\n    <>\r\n    <Header />\r\n    <Switch>\r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"/tv\" exact component={TV} />\r\n      <Route path=\"/search\" component={Search} />\r\n      <Route path=\"/movie/:id\" component={Detail} />\r\n      <Route path=\"/show/:id\" component={Detail} />\r\n      <Redirect from=\"*\" to=\"/\" />\r\n    </Switch>\r\n    </>\r\n  </Router>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration: none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size: 12px;\r\n        background-color: rgba(20, 20, 20, 1);\r\n        color: white;\r\n        padding-top: 50px;\r\n    }\r\n\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}